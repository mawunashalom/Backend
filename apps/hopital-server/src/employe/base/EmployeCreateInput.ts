/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, MaxLength, ValidateNested, IsEnum } from "class-validator";
import { HopitalWhereUniqueInput } from "../../hopital/base/HopitalWhereUniqueInput";
import { Type } from "class-transformer";
import { EnumEmployeSexe } from "./EnumEmployeSexe";
import { EnumEmployeStatut } from "./EnumEmployeStatut";

@InputType()
class EmployeCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  adresse!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  agents!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  contactUrgence!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: true,
    type: () => HopitalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HopitalWhereUniqueInput)
  @Field(() => HopitalWhereUniqueInput)
  hopital!: HopitalWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  nom!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  poste!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  prenom!: string;

  @ApiProperty({
    required: true,
    enum: EnumEmployeSexe,
  })
  @IsEnum(EnumEmployeSexe)
  @Field(() => EnumEmployeSexe)
  sexe!: "MASCULIN" | "FEMININ";

  @ApiProperty({
    required: true,
    enum: EnumEmployeStatut,
  })
  @IsEnum(EnumEmployeStatut)
  @Field(() => EnumEmployeStatut)
  statut!: "Actif" | "Inactif";

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  telephone!: string;
}

export { EmployeCreateInput as EmployeCreateInput };
