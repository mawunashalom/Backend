/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DepenseUpdateManyWithoutHopitalsInput } from "./DepenseUpdateManyWithoutHopitalsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { EmployeUpdateManyWithoutHopitalsInput } from "./EmployeUpdateManyWithoutHopitalsInput";
import { MedicamentUpdateManyWithoutHopitalsInput } from "./MedicamentUpdateManyWithoutHopitalsInput";
import { PatientUpdateManyWithoutHopitalsInput } from "./PatientUpdateManyWithoutHopitalsInput";
import { EnumHopitalStatut } from "./EnumHopitalStatut";
import { UtilisateurUpdateManyWithoutHopitalsInput } from "./UtilisateurUpdateManyWithoutHopitalsInput";

@InputType()
class HopitalUpdateInput {
  @ApiProperty({
    required: false,
    type: () => DepenseUpdateManyWithoutHopitalsInput,
  })
  @ValidateNested()
  @Type(() => DepenseUpdateManyWithoutHopitalsInput)
  @IsOptional()
  @Field(() => DepenseUpdateManyWithoutHopitalsInput, {
    nullable: true,
  })
  depenses?: DepenseUpdateManyWithoutHopitalsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeUpdateManyWithoutHopitalsInput,
  })
  @ValidateNested()
  @Type(() => EmployeUpdateManyWithoutHopitalsInput)
  @IsOptional()
  @Field(() => EmployeUpdateManyWithoutHopitalsInput, {
    nullable: true,
  })
  employes?: EmployeUpdateManyWithoutHopitalsInput;

  @ApiProperty({
    required: false,
    type: () => MedicamentUpdateManyWithoutHopitalsInput,
  })
  @ValidateNested()
  @Type(() => MedicamentUpdateManyWithoutHopitalsInput)
  @IsOptional()
  @Field(() => MedicamentUpdateManyWithoutHopitalsInput, {
    nullable: true,
  })
  medicaments?: MedicamentUpdateManyWithoutHopitalsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nom?: string;

  @ApiProperty({
    required: false,
    type: () => PatientUpdateManyWithoutHopitalsInput,
  })
  @ValidateNested()
  @Type(() => PatientUpdateManyWithoutHopitalsInput)
  @IsOptional()
  @Field(() => PatientUpdateManyWithoutHopitalsInput, {
    nullable: true,
  })
  patients?: PatientUpdateManyWithoutHopitalsInput;

  @ApiProperty({
    required: false,
    enum: EnumHopitalStatut,
  })
  @IsEnum(EnumHopitalStatut)
  @IsOptional()
  @Field(() => EnumHopitalStatut, {
    nullable: true,
  })
  statut?: "Actif" | "Inactif";

  @ApiProperty({
    required: false,
    type: () => UtilisateurUpdateManyWithoutHopitalsInput,
  })
  @ValidateNested()
  @Type(() => UtilisateurUpdateManyWithoutHopitalsInput)
  @IsOptional()
  @Field(() => UtilisateurUpdateManyWithoutHopitalsInput, {
    nullable: true,
  })
  utilisateurs?: UtilisateurUpdateManyWithoutHopitalsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ville?: string;
}

export { HopitalUpdateInput as HopitalUpdateInput };
