/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  ValidateNested,
  IsOptional,
  IsInt,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { Depense } from "../../depense/base/Depense";
import { Employe } from "../../employe/base/Employe";
import { Medicament } from "../../medicament/base/Medicament";
import { Patient } from "../../patient/base/Patient";
import { EnumHopitalStatut } from "./EnumHopitalStatut";
import { Utilisateur } from "../../utilisateur/base/Utilisateur";

@ObjectType()
class Hopital {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Depense],
  })
  @ValidateNested()
  @Type(() => Depense)
  @IsOptional()
  depenses?: Array<Depense>;

  @ApiProperty({
    required: false,
    type: () => [Employe],
  })
  @ValidateNested()
  @Type(() => Employe)
  @IsOptional()
  employes?: Array<Employe>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    type: () => [Medicament],
  })
  @ValidateNested()
  @Type(() => Medicament)
  @IsOptional()
  medicaments?: Array<Medicament>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  nom!: string;

  @ApiProperty({
    required: false,
    type: () => [Patient],
  })
  @ValidateNested()
  @Type(() => Patient)
  @IsOptional()
  patients?: Array<Patient>;

  @ApiProperty({
    required: true,
    enum: EnumHopitalStatut,
  })
  @IsEnum(EnumHopitalStatut)
  @Field(() => EnumHopitalStatut, {
    nullable: true,
  })
  statut?: "Actif" | "Inactif";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Utilisateur],
  })
  @ValidateNested()
  @Type(() => Utilisateur)
  @IsOptional()
  utilisateurs?: Array<Utilisateur>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  ville!: string;
}

export { Hopital as Hopital };
