/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { DepenseListRelationFilter } from "../../depense/base/DepenseListRelationFilter";
import { EmployeListRelationFilter } from "../../employe/base/EmployeListRelationFilter";
import { IntFilter } from "../../util/IntFilter";
import { MedicamentListRelationFilter } from "../../medicament/base/MedicamentListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { PatientListRelationFilter } from "../../patient/base/PatientListRelationFilter";
import { EnumHopitalStatut } from "./EnumHopitalStatut";
import { UtilisateurListRelationFilter } from "../../utilisateur/base/UtilisateurListRelationFilter";

@InputType()
class HopitalWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => DepenseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DepenseListRelationFilter)
  @IsOptional()
  @Field(() => DepenseListRelationFilter, {
    nullable: true,
  })
  depenses?: DepenseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmployeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmployeListRelationFilter)
  @IsOptional()
  @Field(() => EmployeListRelationFilter, {
    nullable: true,
  })
  employes?: EmployeListRelationFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => MedicamentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MedicamentListRelationFilter)
  @IsOptional()
  @Field(() => MedicamentListRelationFilter, {
    nullable: true,
  })
  medicaments?: MedicamentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  nom?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => PatientListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PatientListRelationFilter)
  @IsOptional()
  @Field(() => PatientListRelationFilter, {
    nullable: true,
  })
  patients?: PatientListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumHopitalStatut,
  })
  @IsEnum(EnumHopitalStatut)
  @IsOptional()
  @Field(() => EnumHopitalStatut, {
    nullable: true,
  })
  statut?: "Actif" | "Inactif";

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => UtilisateurListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UtilisateurListRelationFilter)
  @IsOptional()
  @Field(() => UtilisateurListRelationFilter, {
    nullable: true,
  })
  utilisateurs?: UtilisateurListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  ville?: StringFilter;
}

export { HopitalWhereInput as HopitalWhereInput };
