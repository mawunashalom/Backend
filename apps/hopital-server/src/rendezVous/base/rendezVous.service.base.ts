/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  RendezVous as PrismaRendezVous,
  Utilisateur as PrismaUtilisateur,
  Patient as PrismaPatient,
} from "@prisma/client";

export class RendezVousServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RendezVousCountArgs, "select">
  ): Promise<number> {
    return this.prisma.rendezVous.count(args);
  }

  async rendezVousItems(
    args: Prisma.RendezVousFindManyArgs
  ): Promise<PrismaRendezVous[]> {
    return this.prisma.rendezVous.findMany(args);
  }
  async rendezVous(
    args: Prisma.RendezVousFindUniqueArgs
  ): Promise<PrismaRendezVous | null> {
    return this.prisma.rendezVous.findUnique(args);
  }
  async createRendezVous(
    args: Prisma.RendezVousCreateArgs
  ): Promise<PrismaRendezVous> {
    return this.prisma.rendezVous.create(args);
  }
  async updateRendezVous(
    args: Prisma.RendezVousUpdateArgs
  ): Promise<PrismaRendezVous> {
    return this.prisma.rendezVous.update(args);
  }
  async deleteRendezVous(
    args: Prisma.RendezVousDeleteArgs
  ): Promise<PrismaRendezVous> {
    return this.prisma.rendezVous.delete(args);
  }

  async getCreateur(parentId: number): Promise<PrismaUtilisateur | null> {
    return this.prisma.rendezVous
      .findUnique({
        where: { id: parentId },
      })
      .createur();
  }

  async getPatient(parentId: number): Promise<PrismaPatient | null> {
    return this.prisma.rendezVous
      .findUnique({
        where: { id: parentId },
      })
      .patient();
  }
}
