/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  RetraitStock as PrismaRetraitStock,
  Medicament as PrismaMedicament,
  Utilisateur as PrismaUtilisateur,
} from "@prisma/client";

export class RetraitStockServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RetraitStockCountArgs, "select">
  ): Promise<number> {
    return this.prisma.retraitStock.count(args);
  }

  async retraitStocks(
    args: Prisma.RetraitStockFindManyArgs
  ): Promise<PrismaRetraitStock[]> {
    return this.prisma.retraitStock.findMany(args);
  }
  async retraitStock(
    args: Prisma.RetraitStockFindUniqueArgs
  ): Promise<PrismaRetraitStock | null> {
    return this.prisma.retraitStock.findUnique(args);
  }
  async createRetraitStock(
    args: Prisma.RetraitStockCreateArgs
  ): Promise<PrismaRetraitStock> {
    return this.prisma.retraitStock.create(args);
  }
  async updateRetraitStock(
    args: Prisma.RetraitStockUpdateArgs
  ): Promise<PrismaRetraitStock> {
    return this.prisma.retraitStock.update(args);
  }
  async deleteRetraitStock(
    args: Prisma.RetraitStockDeleteArgs
  ): Promise<PrismaRetraitStock> {
    return this.prisma.retraitStock.delete(args);
  }

  async getMedicament(parentId: number): Promise<PrismaMedicament | null> {
    return this.prisma.retraitStock
      .findUnique({
        where: { id: parentId },
      })
      .medicament();
  }

  async getUtilisateur(parentId: number): Promise<PrismaUtilisateur | null> {
    return this.prisma.retraitStock
      .findUnique({
        where: { id: parentId },
      })
      .utilisateur();
  }
}
