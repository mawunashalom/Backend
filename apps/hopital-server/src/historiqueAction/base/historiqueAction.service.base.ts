/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  HistoriqueAction as PrismaHistoriqueAction,
  Utilisateur as PrismaUtilisateur,
} from "@prisma/client";

export class HistoriqueActionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HistoriqueActionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.historiqueAction.count(args);
  }

  async historiqueActions(
    args: Prisma.HistoriqueActionFindManyArgs
  ): Promise<PrismaHistoriqueAction[]> {
    return this.prisma.historiqueAction.findMany(args);
  }
  async historiqueAction(
    args: Prisma.HistoriqueActionFindUniqueArgs
  ): Promise<PrismaHistoriqueAction | null> {
    return this.prisma.historiqueAction.findUnique(args);
  }
  async createHistoriqueAction(
    args: Prisma.HistoriqueActionCreateArgs
  ): Promise<PrismaHistoriqueAction> {
    return this.prisma.historiqueAction.create(args);
  }
  async updateHistoriqueAction(
    args: Prisma.HistoriqueActionUpdateArgs
  ): Promise<PrismaHistoriqueAction> {
    return this.prisma.historiqueAction.update(args);
  }
  async deleteHistoriqueAction(
    args: Prisma.HistoriqueActionDeleteArgs
  ): Promise<PrismaHistoriqueAction> {
    return this.prisma.historiqueAction.delete(args);
  }

  async getUtilisateur(parentId: number): Promise<PrismaUtilisateur | null> {
    return this.prisma.historiqueAction
      .findUnique({
        where: { id: parentId },
      })
      .utilisateur();
  }
}
