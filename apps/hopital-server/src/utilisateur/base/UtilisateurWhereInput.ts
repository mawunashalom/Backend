/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { DepenseListRelationFilter } from "../../depense/base/DepenseListRelationFilter";
import { DgtcpWhereUniqueInput } from "../../dgtcp/base/DgtcpWhereUniqueInput";
import { DossierMedicalListRelationFilter } from "../../dossierMedical/base/DossierMedicalListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { HistoriqueActionListRelationFilter } from "../../historiqueAction/base/HistoriqueActionListRelationFilter";
import { HopitalWhereUniqueInput } from "../../hopital/base/HopitalWhereUniqueInput";
import { IntFilter } from "../../util/IntFilter";
import { OrdonnanceListRelationFilter } from "../../ordonnance/base/OrdonnanceListRelationFilter";
import { PatientListRelationFilter } from "../../patient/base/PatientListRelationFilter";
import { RendezVousListRelationFilter } from "../../rendezVous/base/RendezVousListRelationFilter";
import { RetraitStockListRelationFilter } from "../../retraitStock/base/RetraitStockListRelationFilter";
import { EnumUtilisateurRole } from "./EnumUtilisateurRole";
import { EnumUtilisateurStatut } from "./EnumUtilisateurStatut";

@InputType()
class UtilisateurWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => DepenseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DepenseListRelationFilter)
  @IsOptional()
  @Field(() => DepenseListRelationFilter, {
    nullable: true,
  })
  depenses?: DepenseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DgtcpWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DgtcpWhereUniqueInput)
  @IsOptional()
  @Field(() => DgtcpWhereUniqueInput, {
    nullable: true,
  })
  dgtcp?: DgtcpWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => DossierMedicalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DossierMedicalListRelationFilter)
  @IsOptional()
  @Field(() => DossierMedicalListRelationFilter, {
    nullable: true,
  })
  dossiersMedicaux?: DossierMedicalListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  email?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => HistoriqueActionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HistoriqueActionListRelationFilter)
  @IsOptional()
  @Field(() => HistoriqueActionListRelationFilter, {
    nullable: true,
  })
  historiques?: HistoriqueActionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => HopitalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HopitalWhereUniqueInput)
  @IsOptional()
  @Field(() => HopitalWhereUniqueInput, {
    nullable: true,
  })
  hopital?: HopitalWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  motDePasse?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  nom?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => OrdonnanceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrdonnanceListRelationFilter)
  @IsOptional()
  @Field(() => OrdonnanceListRelationFilter, {
    nullable: true,
  })
  ordonnances?: OrdonnanceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PatientListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PatientListRelationFilter)
  @IsOptional()
  @Field(() => PatientListRelationFilter, {
    nullable: true,
  })
  patients?: PatientListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  prenom?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => RendezVousListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RendezVousListRelationFilter)
  @IsOptional()
  @Field(() => RendezVousListRelationFilter, {
    nullable: true,
  })
  rendezVous?: RendezVousListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RetraitStockListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RetraitStockListRelationFilter)
  @IsOptional()
  @Field(() => RetraitStockListRelationFilter, {
    nullable: true,
  })
  retraitsStock?: RetraitStockListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumUtilisateurRole,
  })
  @IsEnum(EnumUtilisateurRole)
  @IsOptional()
  @Field(() => EnumUtilisateurRole, {
    nullable: true,
  })
  role?:
    | "SUPER_ADMIN"
    | "ADMIN"
    | "MEDECIN"
    | "PHARMACIEN"
    | "ACCUEIL"
    | "COMPTABLE"
    | "DGTCP";

  @ApiProperty({
    required: false,
    enum: EnumUtilisateurStatut,
  })
  @IsEnum(EnumUtilisateurStatut)
  @IsOptional()
  @Field(() => EnumUtilisateurStatut, {
    nullable: true,
  })
  statut?: "Actif" | "Inactif";

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;
}

export { UtilisateurWhereInput as UtilisateurWhereInput };
