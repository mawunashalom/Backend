/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DepenseCreateNestedManyWithoutUtilisateursInput } from "./DepenseCreateNestedManyWithoutUtilisateursInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { DgtcpWhereUniqueInput } from "../../dgtcp/base/DgtcpWhereUniqueInput";
import { DossierMedicalCreateNestedManyWithoutUtilisateursInput } from "./DossierMedicalCreateNestedManyWithoutUtilisateursInput";
import { HistoriqueActionCreateNestedManyWithoutUtilisateursInput } from "./HistoriqueActionCreateNestedManyWithoutUtilisateursInput";
import { HopitalWhereUniqueInput } from "../../hopital/base/HopitalWhereUniqueInput";
import { OrdonnanceCreateNestedManyWithoutUtilisateursInput } from "./OrdonnanceCreateNestedManyWithoutUtilisateursInput";
import { PatientCreateNestedManyWithoutUtilisateursInput } from "./PatientCreateNestedManyWithoutUtilisateursInput";
import { RendezVousCreateNestedManyWithoutUtilisateursInput } from "./RendezVousCreateNestedManyWithoutUtilisateursInput";
import { RetraitStockCreateNestedManyWithoutUtilisateursInput } from "./RetraitStockCreateNestedManyWithoutUtilisateursInput";
import { EnumUtilisateurRole } from "./EnumUtilisateurRole";
import { EnumUtilisateurStatut } from "./EnumUtilisateurStatut";

@InputType()
class UtilisateurCreateInput {
  @ApiProperty({
    required: false,
    type: () => DepenseCreateNestedManyWithoutUtilisateursInput,
  })
  @ValidateNested()
  @Type(() => DepenseCreateNestedManyWithoutUtilisateursInput)
  @IsOptional()
  @Field(() => DepenseCreateNestedManyWithoutUtilisateursInput, {
    nullable: true,
  })
  depenses?: DepenseCreateNestedManyWithoutUtilisateursInput;

  @ApiProperty({
    required: false,
    type: () => DgtcpWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DgtcpWhereUniqueInput)
  @IsOptional()
  @Field(() => DgtcpWhereUniqueInput, {
    nullable: true,
  })
  dgtcp?: DgtcpWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => DossierMedicalCreateNestedManyWithoutUtilisateursInput,
  })
  @ValidateNested()
  @Type(() => DossierMedicalCreateNestedManyWithoutUtilisateursInput)
  @IsOptional()
  @Field(() => DossierMedicalCreateNestedManyWithoutUtilisateursInput, {
    nullable: true,
  })
  dossiersMedicaux?: DossierMedicalCreateNestedManyWithoutUtilisateursInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: false,
    type: () => HistoriqueActionCreateNestedManyWithoutUtilisateursInput,
  })
  @ValidateNested()
  @Type(() => HistoriqueActionCreateNestedManyWithoutUtilisateursInput)
  @IsOptional()
  @Field(() => HistoriqueActionCreateNestedManyWithoutUtilisateursInput, {
    nullable: true,
  })
  historiques?: HistoriqueActionCreateNestedManyWithoutUtilisateursInput;

  @ApiProperty({
    required: false,
    type: () => HopitalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HopitalWhereUniqueInput)
  @IsOptional()
  @Field(() => HopitalWhereUniqueInput, {
    nullable: true,
  })
  hopital?: HopitalWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  motDePasse!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  nom!: string;

  @ApiProperty({
    required: false,
    type: () => OrdonnanceCreateNestedManyWithoutUtilisateursInput,
  })
  @ValidateNested()
  @Type(() => OrdonnanceCreateNestedManyWithoutUtilisateursInput)
  @IsOptional()
  @Field(() => OrdonnanceCreateNestedManyWithoutUtilisateursInput, {
    nullable: true,
  })
  ordonnances?: OrdonnanceCreateNestedManyWithoutUtilisateursInput;

  @ApiProperty({
    required: false,
    type: () => PatientCreateNestedManyWithoutUtilisateursInput,
  })
  @ValidateNested()
  @Type(() => PatientCreateNestedManyWithoutUtilisateursInput)
  @IsOptional()
  @Field(() => PatientCreateNestedManyWithoutUtilisateursInput, {
    nullable: true,
  })
  patients?: PatientCreateNestedManyWithoutUtilisateursInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  prenom!: string;

  @ApiProperty({
    required: false,
    type: () => RendezVousCreateNestedManyWithoutUtilisateursInput,
  })
  @ValidateNested()
  @Type(() => RendezVousCreateNestedManyWithoutUtilisateursInput)
  @IsOptional()
  @Field(() => RendezVousCreateNestedManyWithoutUtilisateursInput, {
    nullable: true,
  })
  rendezVous?: RendezVousCreateNestedManyWithoutUtilisateursInput;

  @ApiProperty({
    required: false,
    type: () => RetraitStockCreateNestedManyWithoutUtilisateursInput,
  })
  @ValidateNested()
  @Type(() => RetraitStockCreateNestedManyWithoutUtilisateursInput)
  @IsOptional()
  @Field(() => RetraitStockCreateNestedManyWithoutUtilisateursInput, {
    nullable: true,
  })
  retraitsStock?: RetraitStockCreateNestedManyWithoutUtilisateursInput;

  @ApiProperty({
    required: true,
    enum: EnumUtilisateurRole,
  })
  @IsEnum(EnumUtilisateurRole)
  @Field(() => EnumUtilisateurRole)
  role!:
    | "SUPER_ADMIN"
    | "ADMIN"
    | "MEDECIN"
    | "PHARMACIEN"
    | "ACCUEIL"
    | "COMPTABLE"
    | "DGTCP";

  @ApiProperty({
    required: true,
    enum: EnumUtilisateurStatut,
  })
  @IsEnum(EnumUtilisateurStatut)
  @Field(() => EnumUtilisateurStatut)
  statut!: "Actif" | "Inactif";
}

export { UtilisateurCreateInput as UtilisateurCreateInput };
